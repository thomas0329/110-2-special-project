%correction: use "conv2"
im = double(imread('Pic/binary_img/binary (1).gif'));

sz = size(im);
C = 10;
%show image
figure(1);
if size(sz,2) == 3
    image(im/255);
else
    image(im);
    colormap(gray(256));
end
title('original image');

%difference(horizontal axis)
im_edge = zeros(sz(1),sz(2));
for m = 1:sz(1)
    for n = 2:sz(2)
        im_edge(m,n) = im(m,n) - im(m,n-1);
    end
end

figure(2);
image(C*abs(im_edge));
colormap(gray(256));
title('difference(horizontal axis)');

%difference(vertical axis)
im_edge = zeros(sz(1),sz(2));
for m = 2:sz(1)
    for n = 1:sz(2)
        im_edge(m,n) = im(m-1,n) - im(m,n);
    end
end

figure(3);
image(C*abs(im_edge));
colormap(gray(256));
title('difference(vertical axis)');

%sobel operator(horizontal axis)
sobel_op = [1 0 -1;2 0 -2;1 0 -1]/4;
%{
my_im_edge = zeros(sz(1),sz(2));

for m = 2:sz(1)-1
    for n = 2:sz(2)-1
        A = im(m-1:m+1,n-1:n+1);
        my_im_edge(m,n) = my_conv(A,sobel_op);
    end
end

figure(4);
image(C*abs(my_im_edge));
colormap(gray(256));
title('sobel operator(horizontal axis) generated by "my_conv"');
%}
im_edge = conv2(im,sobel_op,'same');
figure(4);
image(C*abs(im_edge));
colormap(gray(256));
title('sobel operator(horizontal axis)');

%{
diff = double(my_im_edge) - double(im_edge);
figure(6);
image(abs(diff));
colormap(gray(256));
title('diff');
%}

%sobel operator(vertical axis)
sobel_op = [1 2 1;0 0 0;-1 -2 -1]/4;
im_edge = conv2(im,sobel_op,'same');

figure(5);
image(C*abs(im_edge));
colormap(gray(256));
title('sobel operator(vertical axis)');

%sobel operator(45 degree)
sobel_op = [0 -1 -2;1 0 -1;2 1 0]/4;
im_edge = conv2(im,sobel_op,'same');

figure(6);
image(C*abs(im_edge));
colormap(gray(256));
title('sobel operator(45 degree)');

%sobel operator(135 degree)
sobel_op = [-2 -1 0;-1 0 1;0 1 2]/4;
im_edge = conv2(im,sobel_op,'same');

figure(7);
image(C*abs(im_edge));
colormap(gray(256));
title('sobel operator(135 degree)');

%laplacian operator
laplacian_op = [-1 -1 -1;-1 8 -1;-1 -1 -1]/8;
im_edge = conv2(im,laplacian_op,'same');

figure(8);
image(C*abs(im_edge));
colormap(gray(256));
title('laplacian operator');
%--------------------------------------------------------------------------
function [sum] = my_conv(A,B)
    sum = 0;
    sz = size(A);
    for i = 1:sz(1)
        for j = 1:sz(2)
            sum = sum + A(i,j)*B(i,j);
        end
    end
end







